/*:
## Exercise - Functions and Optionals

 If an app asks for a user's age, it may be because the app requires a user to be over a certain age to use some of the services it provides. Write a function called `checkAge` that takes one parameter of type `String`. The function should try to convert this parameter into an `Int` value and then check if the user is over 18 years old. If he/she is old enough, print "Welcome!", otherwise print "Sorry, but you aren't old enough to use our app." If the `String` parameter cannot be converted into an `Int` value, print "Sorry, something went wrong. Can you please re-enter your age?" Call the function and pass in `userInputAge` below as the single parameter. Then call the function and pass in a string that can be converted to an integer.
 */
let userInputAge: String = "34e"

func checkAge(_ input: String) {
    if let age = Int(input) {
        if age > 18 {
            print("Welcome!")
        } else {
            print("Sorry, but you aren't old enough to use our app.")
        }
    } else {
        print("Sorry, something went wrong. Can you please re-enter your age?")
    }
}

checkAge(userInputAge)              // Test with invalid age input ("34e")
checkAge("20")                      // Test with valid age input ("20")
checkAge("15")                      // Test with under-18 input

//:  Go back and update your function to return the age as an integer. Will your function always return a value? Make sure your return type accurately reflects this. Call the function and print the return value.

func checkAgeReturn(_ input: String) -> Int? {
    if let age = Int(input) {
        if age > 18 {
            print("Welcome!")
            return age
        } else {
            print("Sorry, but you aren't old enough to use our app.")
            return age
        }
    } else {
        print("Sorry, something went wrong. Can you please re-enter your age?")
        return nil
    }
}

let returnedAge1 = checkAgeReturn(userInputAge)   // Should print error and return nil
print(returnedAge1)

let returnedAge2 = checkAgeReturn("25")           // Should print welcome and return 25
print(returnedAge2)

let returnedAge3 = checkAgeReturn("17")           // Should print not old enough and return 17
print(returnedAge3)

//:  Imagine you are creating an app for making purchases. Write a function that will take in the name of an item for purchase as a `String` and will return the cost of that item as an optional `Double`. In the body of the function, check to see if the item is in stock by accessing it in the dictionary `stock`. If it is, return the price of the item by accessing it in the dictionary `prices`. If the item is out of stock, return `nil`. Call the function and pass in a `String` that exists in the dictionaries below. Print the return value.
var prices = ["Chips": 3.69, "Donuts": 1.89, "Juice": 4.99, "Apple": 0.70, "Banana": 0.53, "Broccoli": 1.99]
var stock = ["Chips": 4, "Donuts": 0, "Juice": 12, "Apple": 6, "Banana": 6, "Broccoli": 3]

func purchaseCost(for item: String) -> Double? {
    if let itemStock = stock[item], itemStock > 0 {
        return prices[item]
    } else {
        return nil
    }
}

let cost1 = purchaseCost(for: "Chips")
print(cost1) // Should print Optional(3.69)

let cost2 = purchaseCost(for: "Donuts")
print(cost2) // Should print nil (out of stock)

let cost3 = purchaseCost(for: "Apple")
print(cost3) // Should print Optional(0.7)

/*:
[Previous](@previous)  |  page 3 of 6  |  [Next: App Exercise - Food Functions](@next)
 */
